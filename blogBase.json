{"singlePage": ["about"], "startSite": "09/03/2024", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "style": "", "head": "", "indexScript": "", "indexStyle": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "needComment": 1, "allHead": "<script src='https://stayt2.github.io/assets/theme.js'></script>", "title": " ", "subTitle": " ", "avatarUrl": "https://stayt2.github.io/touxiang.jpg", "GMEEK_VERSION": "last", "email": "stayt@mail.nankai.edu.cn", "postListJson": {"P2": {"htmlDir": "docs/post/Gmeek -jiao-cheng.html", "labels": ["\u6742\u9879"], "postTitle": "Gmeek \u6559\u7a0b", "postUrl": "post/Gmeek%20-jiao-cheng.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/2", "commentNum": 0, "wordCount": 1024, "description": "> [!NOTE]\r\n> Useful information that users should know, even when skimming content.\r\n\r\n> [!TIP]\r\n> Helpful advice for doing things better or more easily.\r\n\r\n> [!IMPORTANT]\r\n> Key information users need to know to achieve their goal.\r\n\r\n> [!WARNING]\r\n> Urgent info that needs immediate user attention to avoid problems.\r\n\r\n> [!CAUTION]\r\n> Advises about risks or negative outcomes of certain actions.\r\n\r\n# iframe\r\n`Gmeek-html<iframe width='100%' height='400px' src='https://www.youtube.com/embed/in1kpo_AWQo?si=_Kj12wzI_aVOXILo' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture;' referrerpolicy='strict-origin-when-cross-origin' allowfullscreen></iframe>`\r\n\r\n`Gmeek-html<iframe style='border-radius:12px' src='https://open.spotify.com/embed/track/0U3fV7K4WFfVRgLGEAKh3g?utm_source=generator' width='100%' height='152' frameBorder='0' allowfullscreen='' allow='autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture' loading='lazy'></iframe>`\r\n\u3002", "top": 0, "createdAt": 1725262366, "style": "<style>.markdown-alert{padding:0.5rem 1rem;margin-bottom:1rem;border-left:.25em solid var(--borderColor-default,var(--color-border-default));}.markdown-alert .markdown-alert-title {display:flex;font-weight:var(--base-text-weight-medium,500);align-items:center;line-height:1;}.markdown-alert>:first-child {margin-top:0;}.markdown-alert>:last-child {margin-bottom:0;}</style><style>.markdown-alert.markdown-alert-note {border-left-color:var(--borderColor-accent-emphasis, var(--color-accent-emphasis));background-color:var(--color-accent-subtle);}.markdown-alert.markdown-alert-note .markdown-alert-title {color: var(--fgColor-accent,var(--color-accent-fg));}</style><style>.markdown-alert.markdown-alert-tip {border-left-color:var(--borderColor-success-emphasis, var(--color-success-emphasis));background-color:var(--color-success-subtle);}.markdown-alert.markdown-alert-tip .markdown-alert-title {color: var(--fgColor-success,var(--color-success-fg));}</style><style>.markdown-alert.markdown-alert-important {border-left-color:var(--borderColor-done-emphasis, var(--color-done-emphasis));background-color:var(--color-done-subtle);}.markdown-alert.markdown-alert-important .markdown-alert-title {color: var(--fgColor-done,var(--color-done-fg));}</style><style>.markdown-alert.markdown-alert-warning {border-left-color:var(--borderColor-attention-emphasis, var(--color-attention-emphasis));background-color:var(--color-attention-subtle);}.markdown-alert.markdown-alert-warning .markdown-alert-title {color: var(--fgColor-attention,var(--color-attention-fg));}</style><style>.markdown-alert.markdown-alert-caution {border-left-color:var(--borderColor-danger-emphasis, var(--color-danger-emphasis));background-color:var(--color-danger-subtle);}.markdown-alert.markdown-alert-caution .markdown-alert-title {color: var(--fgColor-danger,var(--color-danger-fg));}</style>", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-02", "dateLabelColor": "#bc4c00"}, "P3": {"htmlDir": "docs/post/suan-fa-yu-shu-ju-jie-gou.html", "labels": ["\u57fa\u7840\u7b97\u6cd5"], "postTitle": "\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784", "postUrl": "post/suan-fa-yu-shu-ju-jie-gou.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/3", "commentNum": 0, "wordCount": 30293, "description": "# \u7b97\u6cd5\u5206\u6790\r\nPython \u4e00\u4e9b\u5e38\u89c1\u7684\u7b97\u6cd5\u5e93\uff1a\r\n1. collections - \u8fd9\u4e2a\u6a21\u5757\u63d0\u4f9b\u4e86\u8bb8\u591a\u6269\u5c55\u7684\u5bb9\u5668\u7c7b\u578b\uff1a\r\n\r\n    - deque: \u63d0\u4f9b\u4e86\u4e00\u4e2a\u53cc\u7aef\u961f\u5217\uff0c\u652f\u6301\u4ece\u524d\u7aef\u6216\u540e\u7aef\u4ee5\u8fd1\u4e4e O(1) \u7684\u590d\u6742\u5ea6\u6dfb\u52a0\u6216\u5220\u9664\u5143\u7d20\u3002", "top": 0, "createdAt": 1725262405, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-02", "dateLabelColor": "#bc4c00"}, "P4": {"htmlDir": "docs/post/lian-biao.html", "labels": ["\u57fa\u7840\u7b97\u6cd5"], "postTitle": "\u94fe\u8868", "postUrl": "post/lian-biao.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/4", "commentNum": 0, "wordCount": 7334, "description": "\u53d8\u4f53\u6709\u53cc\u5411\u94fe\u8868\uff0c\u5faa\u73af\u94fe\u8868\r\n```python\r\nfrom llist import sllist, dllist\r\n\r\n# \u5355\u94fe\u8868\r\nsl = sllist([1, 2, 3])\r\nprint(sl)  # \u8f93\u51fa: [1, 2, 3]\r\n\r\n# \u53cc\u94fe\u8868\r\ndl = dllist([10, 20, 30])\r\nprint(dl)  # \u8f93\u51fa: [10, 20, 30]\r\n```\r\n```python\r\nclass ListNode:\r\n    def __init__(self, x):\r\n        self.val = x\r\n        self.next = None\r\n```\r\n\u4e00\u4e2a\u6807\u51c6\u6709\u6548\u7684 \u94fe\u8868\u662f\r\n\r\n1. \u5173\u952e\u70b9\u4e00\u3001\u540c\u65f6\u6301\u6709\u5934\u5c3e\u8282\u70b9\u7684\u5f15\u7528\uff0c\u597d\u5904\u662f\u5bf9\u4e8e\u5934\u5c3e\u7684\u64cd\u4f5c\u76f4\u63a5\u662fO(1)\r\n2. \u5173\u952e\u70b9\u4e8c\u3001\u865a\u62df\u5934\u5c3e\u8282\u70b9, \u597d\u5904\u662f\u4e0d\u4f1a\u5b58\u5728\u8d8a\u754c\u95ee\u9898\r\n\r\n\u5bf9\u5e94\u9898\u76ee\uff1a https://leetcode.cn/problems/design-linked-list/submissions/\r\n\r\n\u4e0b\u9762\u662f\u4e00\u4e2a\u6807\u51c6\u7684 \u94fe\u8868 \u7684\u5b9e\u73b0\uff1a\r\n```python\r\nclass Node:\r\n    def __init__(self, data=None):\r\n        self.data = data\r\n        self.next = None\r\n\r\nclass LinkedList:\r\n    def __init__(self):\r\n        # \u521d\u59cb\u5316\u865a\u62df\u5934\u5c3e\u8282\u70b9\r\n        self.head = Node()  # \u865a\u62df\u5934\u8282\u70b9\r\n        self.tail = Node()  # \u865a\u62df\u5c3e\u8282\u70b9\r\n        self.head.next = self.tail  # \u5934\u8282\u70b9\u6307\u5411\u5c3e\u8282\u70b9\r\n        self.size = 0  # \u94fe\u8868\u7684\u957f\u5ea6\r\n\r\n    def is_empty(self):\r\n        return self.size == 0\r\n\r\n    def insert_at_end(self, data):\r\n        new_node = Node(data)\r\n        current = self.head\r\n        while current.next != self.tail:\r\n            current = current.next\r\n        current.next = new_node\r\n        new_node.next = self.tail\r\n        self.size += 1\r\n\r\n    def insert_at_beginning(self, data):\r\n        new_node = Node(data)\r\n        new_node.next = self.head.next\r\n        self.head.next = new_node\r\n        self.size += 1\r\n\r\n    def delete(self, data):\r\n        current = self.head\r\n        while current.next != self.tail:\r\n            if current.next.data == data:\r\n                current.next = current.next.next\r\n                self.size -= 1\r\n                return True\r\n            current = current.next\r\n        return False\r\n\r\n    def search(self, data):\r\n        current = self.head.next\r\n        while current != self.tail:\r\n            if current.data == data:\r\n                return True\r\n            current = current.next\r\n        return False\r\n\r\n    def update(self, old_data, new_data):\r\n        current = self.head.next\r\n        while current != self.tail:\r\n            if current.data == old_data:\r\n                current.data = new_data\r\n                return True\r\n            current = current.next\r\n        return False\r\n\r\n    def display(self):\r\n        current = self.head.next\r\n        while current != self.tail:\r\n            print(current.data, end=' -> ')\r\n            current = current.next\r\n        print('None')\r\n\r\n    def list_to_linked_list(self, lst):\r\n        for data in lst:\r\n            self.insert_at_end(data)\r\n\r\n# \u4f7f\u7528\u793a\u4f8b\r\nll = LinkedList()\r\n\r\n# \u63d2\u5165\u8282\u70b9\r\nll.insert_at_end(1)\r\nll.insert_at_end(2)\r\nll.insert_at_end(3)\r\nll.display()  # \u8f93\u51fa: 1 -> 2 -> 3 -> None\r\n\r\n# \u5728\u5934\u90e8\u63d2\u5165\u8282\u70b9\r\nll.insert_at_beginning(0)\r\nll.display()  # \u8f93\u51fa: 0 -> 1 -> 2 -> 3 -> None\r\n\r\n# \u5220\u9664\u8282\u70b9\r\nll.delete(2)\r\nll.display()  # \u8f93\u51fa: 0 -> 1 -> 3 -> None\r\n\r\n# \u67e5\u627e\u8282\u70b9\r\nprint(ll.search(3))  # \u8f93\u51fa: True\r\nprint(ll.search(4))  # \u8f93\u51fa: False\r\n\r\n# \u66f4\u65b0\u8282\u70b9\r\nll.update(1, 10)\r\nll.display()  # \u8f93\u51fa: 0 -> 10 -> 3 -> None\r\n\r\n# \u5c06\u5217\u8868\u8f6c\u6362\u4e3a\u94fe\u8868\r\nll2 = LinkedList()\r\nll2.list_to_linked_list([4, 5, 6])\r\nll2.display()  # \u8f93\u51fa: 4 -> 5 -> 6 -> None\r\n\r\n```\r\n# \u7b97\u6cd5\r\n## \u53cd\u8f6c\u94fe\u8868\r\n\r\n```python\r\nclass Node:\r\n    def __init__(self, data):\r\n        self.data = data\r\n        self.next = None\r\n\r\nclass LinkedList:\r\n    def __init__(self):\r\n        self.head = None\r\n\r\n    def append(self, data):\r\n        new_node = Node(data)\r\n        if not self.head:\r\n            self.head = new_node\r\n        else:\r\n            current = self.head\r\n            while current.next:\r\n                current = current.next\r\n            current.next = new_node\r\n\r\n    def reverse(self):\r\n        prev = None\r\n        current = self.head\r\n        while current:\r\n            next_node = current.next\r\n            current.next = prev\r\n            prev = current\r\n            current = next_node\r\n        self.head = prev\r\n\r\n    def display(self):\r\n        current = self.head\r\n        while current:\r\n            print(current.data, end=' -> ')\r\n            current = current.next\r\n        print('None')\r\n\r\n# \u4f7f\u7528\u793a\u4f8b\r\nll = LinkedList()\r\nll.append(1)\r\nll.append(2)\r\nll.append(3)\r\nll.display()  # \u8f93\u51fa: 1 -> 2 -> 3 -> None\r\nll.reverse()\r\nll.display()  # \u8f93\u51fa: 3 -> 2 -> 1 -> None\r\n\r\n```\r\n\r\n## \u68c0\u6d4b\u94fe\u8868\u4e2d\u7684\u73af\r\n\u73af\u5f62\u94fe\u8868\u662f\u6307\u94fe\u8868\u4e2d\u5b58\u5728\u4e00\u4e2a\u8282\u70b9\u6307\u5411\u4e4b\u524d\u67d0\u4e2a\u8282\u70b9\u7684\u60c5\u51b5\u3002", "top": 0, "createdAt": 1725262433, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-02", "dateLabelColor": "#bc4c00"}, "P5": {"htmlDir": "docs/post/dui-lie---zhan.html", "labels": ["\u57fa\u7840\u7b97\u6cd5"], "postTitle": "\u961f\u5217/\u6808", "postUrl": "post/dui-lie---zhan.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/5", "commentNum": 0, "wordCount": 1748, "description": "- deque: \u63d0\u4f9b\u4e86\u4e00\u4e2a\u53cc\u7aef\u961f\u5217\uff0c\u652f\u6301\u4ece\u524d\u7aef\u6216\u540e\u7aef\u4ee5\u8fd1\u4e4e O(1) \u7684\u590d\u6742\u5ea6\u6dfb\u52a0\u6216\u5220\u9664\u5143\u7d20\u3002", "top": 0, "createdAt": 1725262452, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-02", "dateLabelColor": "#bc4c00"}, "P6": {"htmlDir": "docs/post/you-xian-dui-lie---dui.html", "labels": ["\u57fa\u7840\u7b97\u6cd5"], "postTitle": "\u4f18\u5148\u961f\u5217/\u5806", "postUrl": "post/you-xian-dui-lie---dui.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/6", "commentNum": 0, "wordCount": 2495, "description": "\u5728 Python \u4e2d\uff0c\u4f18\u5148\u961f\u5217\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u4e0e\u4e00\u4e2a\u4f18\u5148\u7ea7\u76f8\u5173\u8054\u3002", "top": 0, "createdAt": 1725262765, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-02", "dateLabelColor": "#bc4c00"}, "P7": {"htmlDir": "docs/post/bing-cha-ji---ha-xi-biao- .html", "labels": ["\u57fa\u7840\u7b97\u6cd5"], "postTitle": "\u5e76\u67e5\u96c6/\u54c8\u5e0c\u8868 ", "postUrl": "post/bing-cha-ji---ha-xi-biao-%20.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/7", "commentNum": 0, "wordCount": 6107, "description": "# \u5e76\u67e5\u96c6\r\n\u5e76\u67e5\u96c6\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u7279\u522b\u9002\u7528\u4e8e\u5904\u7406\u4e00\u4e9b\u4e0d\u4ea4\u96c6\u7684\u5408\u5e76\u53ca\u67e5\u8be2\u95ee\u9898\u3002", "top": 0, "createdAt": 1725262781, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-02", "dateLabelColor": "#bc4c00"}, "P8": {"htmlDir": "docs/post/shu---tu.html", "labels": ["\u57fa\u7840\u7b97\u6cd5"], "postTitle": "\u6811/\u56fe", "postUrl": "post/shu---tu.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/8", "commentNum": 0, "wordCount": 11168, "description": "# \u4e8c\u53c9\u6811\r\n```python\r\nclass TreeNode:\r\n    def __init__(self, value):\r\n        self.value = value\r\n        self.left = None\r\n        self.right = None\r\n```\r\n## \u904d\u5386\r\n```python\r\nclass BinaryTree:\r\n    def __init__(self):\r\n        self.root = None\r\n\r\n    def inorder_traversal(self):\r\n        '''\u4e2d\u5e8f\u904d\u5386\u4e8c\u53c9\u6811'''\r\n        return self._inorder_recursive(self.root)\r\n    \r\n    def _inorder_recursive(self, node):\r\n        result = []\r\n        if node:\r\n            result = self._inorder_recursive(node.left)\r\n            result.append(node.value)\r\n            result.extend(self._inorder_recursive(node.right))\r\n        return result\r\n\r\n    def preorder_traversal(self):\r\n        '''\u524d\u5e8f\u904d\u5386\u4e8c\u53c9\u6811'''\r\n        return self._preorder_recursive(self.root)\r\n    \r\n    def _preorder_recursive(self, node):\r\n        result = []\r\n        if node:\r\n            result.append(node.value)\r\n            result.extend(self._preorder_recursive(node.left))\r\n            result.extend(self._preorder_recursive(node.right))\r\n        return result\r\n\r\n    def postorder_traversal(self):\r\n        '''\u540e\u5e8f\u904d\u5386\u4e8c\u53c9\u6811'''\r\n        return self._postorder_recursive(self.root)\r\n    \r\n    def _postorder_recursive(self, node):\r\n        result = []\r\n        if node:\r\n            result.extend(self._postorder_recursive(node.left))\r\n            result.extend(self._postorder_recursive(node.right))\r\n            result.append(node.value)\r\n        return result\r\n\r\n# \u521b\u5efa\u4e8c\u53c9\u6811\u5b9e\u4f8b\r\nbt = BinaryTree()\r\nbt.insert(10)\r\nbt.insert(5)\r\nbt.insert(15)\r\nbt.insert(3)\r\nbt.insert(7)\r\nbt.insert(13)\r\nbt.insert(18)\r\n\r\n# \u904d\u5386\u8f93\u51fa\r\nprint('Inorder Traversal:', bt.inorder_traversal())\r\nprint('Preorder Traversal:', bt.preorder_traversal())\r\nprint('Postorder Traversal:', bt.postorder_traversal())\r\n```\r\n## \u641c\u7d22\r\n### \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\r\n\u5373\u4e09\u79cd\u904d\u5386\u7b97\u6cd5\r\n### \u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\r\n\u5373\u5c42\u6b21\u904d\u5386\r\n```python\r\nclass TreeNode:\r\n    def __init__(self, value):\r\n        self.value = value\r\n        self.left = None\r\n        self.right = None\r\n\r\nclass BinaryTree:\r\n    def __init__(self):\r\n        self.root = None\r\n    \r\n    def dfs_preorder(self):\r\n        return self._dfs_preorder(self.root, [])\r\n    \r\n    def _dfs_preorder(self, node, result):\r\n        if node:\r\n            result.append(node.value)  # \u8bbf\u95ee\u8282\u70b9\r\n            self._dfs_preorder(node.left, result)  # \u904d\u5386\u5de6\u5b50\u6811\r\n            self._dfs_preorder(node.right, result)  # \u904d\u5386\u53f3\u5b50\u6811\r\n        return result\r\n\r\n    def bfs(self):\r\n        result = []\r\n        if not self.root:\r\n            return result\r\n        queue = [self.root]\r\n        while queue:\r\n            node = queue.pop(0)\r\n            result.append(node.value)  # \u8bbf\u95ee\u8282\u70b9\r\n            if node.left:\r\n                queue.append(node.left)\r\n            if node.right:\r\n                queue.append(node.right)\r\n        return result\r\n\r\n# \u521b\u5efa\u4e8c\u53c9\u6811\u5b9e\u4f8b\r\nbt = BinaryTree()\r\nbt.root = TreeNode(1)\r\nbt.root.left = TreeNode(2)\r\nbt.root.right = TreeNode(3)\r\nbt.root.left.left = TreeNode(4)\r\nbt.root.left.right = TreeNode(5)\r\n\r\n# DFS \u5148\u5e8f\u904d\u5386\u8f93\u51fa\r\nprint('DFS Preorder:', bt.dfs_preorder())\r\n# BFS \u5c42\u6b21\u904d\u5386\u8f93\u51fa\r\nprint('BFS:', bt.bfs())\r\n```\r\n### \u8ba1\u7b97\u6811\u7684\u9ad8\u5ea6\u548c\u6df1\u5ea6\r\n\r\n- \u8ba1\u7b97\u6811\u7684\u9ad8\u5ea6\uff1a\u6811\u7684\u9ad8\u5ea6\u662f\u4ece\u6839\u8282\u70b9\u5230\u6700\u8fdc\u53f6\u5b50\u8282\u70b9\u7684\u6700\u957f\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u6570\u3002", "top": 0, "createdAt": 1725262797, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-02", "dateLabelColor": "#bc4c00"}, "P9": {"htmlDir": "docs/post/mian-shi-dai-ma-ti-mu.html", "labels": ["\u4ee3\u7801"], "postTitle": "\u9762\u8bd5\u4ee3\u7801\u9898\u76ee", "postUrl": "post/mian-shi-dai-ma-ti-mu.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/9", "commentNum": 0, "wordCount": 4353, "description": "# \u7b2c k \u5927\u7684\u6570\u7ec4\r\n\r\n```python\r\nclass Solution:\r\n    def findKthLargest(self, nums: List[int], k: int) -> int:\r\n        # \u4ea4\u6362\u4f4d\u7f6ei\u548c\u4f4d\u7f6ej\u7684\u5143\u7d20\r\n        def swap(i: int, j: int):\r\n            nums[i], nums[j] = nums[j], nums[i]\r\n\r\n        # \u5bf9[left, right]\u8303\u56f4\u5185\u7684\u5143\u7d20\u8fdb\u884c\u964d\u5e8f\u5feb\u6392\uff0c\u627e\u5230\u7b2ck\u5927\u5143\u7d20\r\n        def quick_sort_kth_element(k: int, left: int, right: int) -> int:\r\n            mid = (right + left) // 2    # \u9009\u53d6\u4e2d\u95f4\u5143\u7d20\u4f5c\u4e3a\u5207\u5206\u503c\r\n            swap(mid, right)             # \u5c06\u5207\u5206\u503c\u653e\u5230\u53f3\u8fb9\u754c\u907f\u514d\u52a0\u5165\u5143\u7d20\u7684\u5212\u5206\r\n            partition, i, j = nums[right], left, right   # \u53cc\u6307\u9488\u4ece\u5de6\u53f3\u8fb9\u754c\u5f00\u59cb\uff0c\u5206\u522b\u627e\u5230\u8981\u4ea4\u6362\u7684\u5143\u7d20\r\n            while i < j:\r\n                while i < j and nums[i] >= partition: i += 1    # \u627e\u5230\u5de6\u4fa7\u5c0f\u4e8e\u5207\u5206\u503c\u7684\u5143\u7d20\r\n                while j > i and nums[j] <= partition: j -=1    # \u627e\u5230\u53f3\u4fa7\u5927\u4e8e\u5207\u5206\u503c\u7684\u5143\u7d20\u3010\u56e0\u4e3a\u662f\u627e\u5927\u4e8e\uff0c\u5373\u4f7fj\u4eceright\u5f00\u59cb\uff0cright\u4e5f\u4e0d\u4f1a\u88ab\u9009\u4e2d\u3011\r\n                if i < j:\r\n                    swap(i, j)     # \u5c06\u5927\u4e8e\u5143\u7d20\u653e\u5230\u5de6\u4fa7\uff0c\u5c0f\u4e8e\u5143\u7d20\u653e\u5230\u53f3\u4fa7\r\n            swap(i, right)     # i\u6700\u540e\u505c\u7559\u7684\u4f4d\u7f6e\u4e00\u5b9a\u662f\u53f3\u4fa7\u9996\u4e2a\u5c0f\u4e8e\u5207\u5206\u503c\u7684\u5143\u7d20\uff0c\u4e0e\u5207\u5206\u503c\u4ea4\u6362\uff0c\u5219[left, i)\u90fd\u662f\u5927\u4e8e\uff08\u7b49\u4e8e\uff09\u5207\u5206\u503c\uff0c[i+1, right]\u90fd\u662f\u5c0f\u4e8e\uff08\u7b49\u4e8e\uff09\u5207\u5206\u503c\r\n            if i == k - 1: return nums[i]   # \u5982\u679c\u5207\u5206\u503c\u5c31\u662f\u7b2ck\u5927\u5143\u7d20\uff0c\u76f4\u63a5\u8fd4\u56de\r\n            if i < k - 1: return quick_sort_kth_element(k, i + 1, right)     # \u5207\u5206\u503c\u662f\u7b2ck\u5927\u4e4b\u524d\u7684\u5143\u7d20\uff0c\u5728\u53f3\u533a\u95f4\u641c\u7d22\u7b2ck\u5927\r\n            return quick_sort_kth_element(k, left, i - 1)   # \u5207\u5206\u503c\u662f\u7b2ck\u5927\u4e4b\u540e\u7684\u5143\u7d20\uff0c\u5728\u5de6\u533a\u95f4\u641c\u7d22\u7b2ck\u5927\r\n        \r\n        return quick_sort_kth_element(k, 0, len(nums) - 1)    # \u5feb\u6392\u6574\u4e2a\u533a\u95f4\r\n\r\n\u94fe\u63a5\uff1ahttps://leetcode.cn/problems/kth-largest-element-in-an-array/solutions/2647778/javapython3cdui-pai-xu-kuai-su-pai-xu-ji-jcb9/\r\n\r\n```\r\n\r\nhttps://leetcode.cn/studyplan/top-100-liked/\r\n\r\nHot100\u4e00\u5b9a\u8981\u5237\u5b8c\r\n\r\n# \u817e\u8baf\r\n- \u4e00\u4e2a\u6570\u7ec4\u7b2c k \u5927\u7684\u6570\u5b57\r\n\r\n# \u767e\u5ea6\r\n- \u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\r\n- \u4e2d\u4f4d\u6570\u67e5\u627e\u95ee\u9898\r\n# \u534e\u6cf0\r\n\r\n# 360\r\n- \u4e00\u4e2aeasy\u9898\u76ee\r\n- \u4e00\u4e2a\u8868\u8fbe\u5f0f\u968f\u673a\u63d2\u5165\u4e00\u4e2a\u6570\u5b57\u4e4b\u540e\u80fd\u5426\u76f8\u7b49\r\n# \u4f5c\u4e1a\u5e2e\r\n- \u4e00\u4e2amedium\u9898\u76ee\r\n\r\n# \u79d1\u5927\u8baf\u98de\r\n\r\n# \u957f\u946b\u5b58\u50a8\r\n- easy\u9898\u76ee\r\n- \u623f\u79df\u5206\u914d\u95ee\u9898\r\n\r\n# \u7f8e\u56e2\r\n\r\n# 360\r\n\r\n# \u8baf\u98de\r\n\r\n# \u6587\u8fdc\r\n\r\n#  Robosense\r\n\r\n# \u4e5d\u5764\r\n\r\n# \u5b57\u8282\r\n> \u7ed9\u5b9a\u4e00\u4e2a\u6570n\uff0c\u598223121;\u7ed9\u5b9a\u4e00\u7ec4\u6570\u5b57A\u5982{2,4,9}\uff0c\u6c42\u7531A\u4e2d\u5143\u7d20\u7ec4\u6210\u7684\u5c0f\u4e8en\u7684\u6700\u5927\u6570\uff0c\u5982\u5c0f\u4e8e23121\u7684\u6700\u5927\u6570\u4e3a 22999\r\n\r\n```python\r\ndef find_max_less_than_n(n, A):\r\n    # \u5c06n\u8f6c\u5316\u4e3a\u5b57\u7b26\u6570\u7ec4\uff0c\u65b9\u4fbf\u5904\u7406\u6bcf\u4e00\u4f4d\u6570\u5b57\r\n    digits = list(str(n))\r\n    # \u5bf9A\u8fdb\u884c\u6392\u5e8f\uff0c\u786e\u4fdd\u53ef\u4ee5\u4ece\u5927\u5230\u5c0f\u5c1d\u8bd5\r\n    A = sorted(A, reverse=True)\r\n    \r\n    def backtrack(index):\r\n        if index < 0:\r\n            # \u5982\u679c\u56de\u6eaf\u8d85\u51fa\u6700\u9ad8\u4f4d\uff0c\u5219\u8fd4\u56deA\u4e2d\u6700\u5927\u5143\u7d20\u7ec4\u6210\u7684\u5c0f\u4e8en\u7684\u6700\u5927\u6570\r\n            return str(A[0]) * int(len(digits)-1)\r\n        \r\n        original = int(digits[index])  # \u4fdd\u5b58\u539f\u59cb\u6570\u5b57\r\n        for a in A:\r\n            # \u4ece\u5927\u5230\u5c0f\u5c1d\u8bd5\u66ff\u6362\u5f53\u524d\u4f4d\u7684\u6570\u5b57\r\n            if a < original:\r\n                digits[index] = str(a)\r\n                # \u5c06\u540e\u9762\u7684\u6240\u6709\u4f4d\u66ff\u6362\u6210A\u4e2d\u6700\u5927\u7684\u6570\u5b57\r\n                for i in range(index + 1, len(digits)):\r\n                    digits[i] = str(A[0])\r\n                return ''.join(digits)\r\n        # \u5982\u679c\u6240\u6709\u7684\u6570\u5b57\u90fd\u4e0d\u80fd\u66ff\u6362\u5f53\u524d\u4f4d\r\n        # \u90a3\u4e48\u56de\u6eaf\u5230\u4e0a\u4e00\u4f4d\r\n        digits[index] = str(original)\r\n        return backtrack(index - 1)\r\n    \r\n    # \u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\u56de\u6eaf\r\n    return backtrack(len(digits) - 1)\r\n\r\n# \u7ed9\u5b9a\u7684\u6570\u5b57\r\nn = 23121\r\n# \u7ed9\u5b9a\u7684\u6570\u5b57\u96c6\u5408A\r\nA = [2, 4, 9]\r\n# \u6253\u5370\u7ed3\u679c\r\nprint(find_max_less_than_n(n, A))  # \u8f93\u51fa\u5e94\u8be5\u662f22999\r\n\r\n# \u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\r\nn = 22121\r\nprint(find_max_less_than_n(n, A))  # \u8f93\u51fa\u5e94\u8be5\u662f9999\r\n```\r\n\r\n# \u6ed1\u52a8\u7a97\u53e3\u95ee\u9898\r\n\r\nhttps://leetcode.cn/problems/minimum-size-subarray-sum/description/\r\n\r\n```python\r\ndef min_sub_len(s, nums):\r\n    n = len(nums)\r\n    min_len = float('inf')  # \u521d\u59cb\u5316\u6700\u5c0f\u957f\u5ea6\u4e3a\u65e0\u7a77\u5927\r\n    left = 0  # \u521d\u59cb\u5316\u5de6\u6307\u9488\r\n    cur = 0  # \u521d\u59cb\u5316\u5f53\u524d\u548c\u4e3a0\r\n    for right in range(n):  # \u53f3\u6307\u9488\u5728\u6570\u7ec4\u4e0a\u6ed1\u52a8\r\n        cur += nums[right]  # \u5c06\u5f53\u524d\u53f3\u6307\u9488\u6307\u5411\u7684\u503c\u52a0\u5230\u5f53\u524d\u548c\u4e2d\r\n        while cur >= s:  # \u5f53\u5f53\u524d\u548c\u5927\u4e8e\u7b49\u4e8es\u65f6\uff0c\u5c1d\u8bd5\u7f29\u5c0f\u7a97\u53e3\r\n            min_len = min(min_len, right - left + 1)  # \u66f4\u65b0\u6700\u5c0f\u957f\u5ea6\r\n            cur -= nums[left]  # \u4ece\u5f53\u524d\u548c\u4e2d\u51cf\u53bb\u5de6\u6307\u9488\u6307\u5411\u7684\u503c\r\n            left += 1  # \u79fb\u52a8\u5de6\u6307\u9488\r\n    return min_len if min_len != float('inf') else 0  # \u5982\u679c\u627e\u5230\u4e86\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de\u6700\u5c0f\u957f\u5ea6\uff1b\u5426\u5219\u8fd4\u56de0\r\n```\r\n\u8fd9\u4e2a\u9898\u6709\u4e2a\u5751\u7684\u5730\u65b9\u5c31\u662f while \u5bb9\u6613\u5199\u6210 if \r\n\r\n\u8fd9\u79cd\u65b9\u6cd5\u80fd\u627e\u5230\u6700\u5c0f\u957f\u5ea6\u7684\u6570\u7ec4\uff0c\u662f\u56e0\u4e3a\u5b83\u9075\u5faa\u4e86\u4e24\u4e2a\u5173\u952e\u7684\u7b56\u7565\uff1a\r\n\r\n- \u7b56\u7565\u4e00\uff1a\u9012\u589e\u7a97\u53e3\u4ee5\u6ee1\u8db3\u6700\u5c0f\u548c\u8981\u6c42\r\n\u5f53\u7a97\u53e3\u4e2d\u7684\u5143\u7d20\u603b\u548c\u5c0f\u4e8e s \u65f6\uff0c\u6211\u4eec\u901a\u8fc7\u5411\u53f3\u79fb\u52a8 right \u6307\u9488\u6765\u589e\u52a0\u7a97\u53e3\u7684\u5927\u5c0f\u3002", "top": 0, "createdAt": 1725262837, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-02", "dateLabelColor": "#bc4c00"}, "P10": {"htmlDir": "docs/post/ji-qi-xue-xi-mian-shi-chang-jian-wen-ti- - easy.html", "labels": ["\u673a\u5668\u5b66\u4e60\u7b97\u6cd5"], "postTitle": "\u673a\u5668\u5b66\u4e60\u9762\u8bd5\u5e38\u89c1\u95ee\u9898 - easy", "postUrl": "post/ji-qi-xue-xi-mian-shi-chang-jian-wen-ti-%20-%20easy.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/10", "commentNum": 0, "wordCount": 1103, "description": "\u673a\u5668\u5b66\u4e60\u548c\u4eba\u7c7b\u5b66\u4e60\u6709\u7740\u5343\u4e1d\u4e07\u7f15\u7684\u8054\u7cfb\uff0c\u4eba\u7c7b\u8bd5\u56fe\u6784\u5efa\u4e00\u4e9b\u5b66\u4f1a\u5b66\u4e60\uff08Learning to learn\uff09\u7684\u65b9\u5f0f\u6559\u7ed9\u7535\u8111/\u7b97\u6cd5\u4ee5\u5b66\u4e60\u4eba\u7c7b\u7684\u5b66\u4e60\u65b9\u6cd5\u3002", "top": 0, "createdAt": 1725262867, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script><script>MathJax = {tex: {inlineMath: [[\"$\", \"$\"]]}};</script><script async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-02", "dateLabelColor": "#bc4c00"}, "P11": {"htmlDir": "docs/post/ji-qi-xue-xi-mian-shi-chang-jian-wen-ti- - medium.html", "labels": ["\u673a\u5668\u5b66\u4e60\u7b97\u6cd5"], "postTitle": "\u673a\u5668\u5b66\u4e60\u9762\u8bd5\u5e38\u89c1\u95ee\u9898 - medium", "postUrl": "post/ji-qi-xue-xi-mian-shi-chang-jian-wen-ti-%20-%20medium.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/11", "commentNum": 0, "wordCount": 53, "description": "# \u6570\u5b66\u4e2d\u7ea7\r\n\r\n# NLP\r\n\r\n# RL/GAN\r\n\r\n# \u5927\u6a21\u578b\r\n\r\n# \u63a8\u8350\u7cfb\u7edf/\u9ad8\u65af\u8fc7\u7a0b\r\n\u3002", "top": 0, "createdAt": 1725262881, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-02", "dateLabelColor": "#bc4c00"}, "P12": {"htmlDir": "docs/post/ji-qi-xue-xi-mian-shi-chang-jian-wen-ti- - hard.html", "labels": ["\u673a\u5668\u5b66\u4e60\u7b97\u6cd5"], "postTitle": "\u673a\u5668\u5b66\u4e60\u9762\u8bd5\u5e38\u89c1\u95ee\u9898 - hard", "postUrl": "post/ji-qi-xue-xi-mian-shi-chang-jian-wen-ti-%20-%20hard.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/12", "commentNum": 0, "wordCount": 73, "description": "# \u7ec6\u8282\u7684\u4e1c\u897f\u90fd\u96be\r\n\r\n\r\n# \u5176\u4ed6\u95ee\u9898\uff1a\u5f00\u53d1\uff0c\u6d4b\u8bd5\uff0c\u5b89\u5168\u6280\u672f\r\n\r\n- Python\u5e38\u89c1\u95ee\u9898\r\n\r\n1. \u6df1\u62f7\u8d1d\uff0c\u6d45\u62f7\u8d1d\r\n\r\n\r\n# \u667a\u529b\u9898\u3002", "top": 0, "createdAt": 1725262893, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-02", "dateLabelColor": "#bc4c00"}, "P13": {"htmlDir": "docs/post/Beam Search -mo-ban.html", "labels": ["\u4ee3\u7801"], "postTitle": "Beam Search \u6a21\u677f", "postUrl": "post/Beam%20Search%20-mo-ban.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/13", "commentNum": 0, "wordCount": 2166, "description": "```python\r\n\r\nimport torch\r\nimport torch.nn.functional as F\r\n\r\nclass Beam:\r\n    def __init__(self, token, logp, h, sequence):\r\n        # \u521d\u59cb\u5316beam\u5bf9\u8c61\r\n        self.token = token  # \u5f53\u524dtoken\r\n        self.logp = logp  # \u5f53\u524dtoken\u7684\u5bf9\u6570\u6982\u7387\r\n        self.h = h  # \u9690\u85cf\u72b6\u6001\r\n        self.sequence = sequence  # \u5230\u76ee\u524d\u4e3a\u6b62\u7684\u5e8f\u5217\r\n        self.done = (token == VOCAB+1)  # \u5224\u65ad\u662f\u5426\u5230\u8fbe\u5e8f\u5217\u7ed3\u675f\u6807\u8bb0EOS\r\n\r\n    def extend(self, token, logp, h):\r\n        # \u6269\u5c55\u5f53\u524dbeam\uff0c\u8fd4\u56de\u65b0\u7684beam\u5b9e\u4f8b\r\n        return Beam(token, self.logp + logp, h, self.sequence + [token])\r\n\r\n\r\ndef beam_search(model, inp, beam_width=5, max_decoding_len=15, top_k=10):\r\n    # \u4f7f\u7528beam search\u7b97\u6cd5\u8fdb\u884c\u89e3\u7801\r\n    model.eval()  # \u8bbe\u7f6e\u6a21\u578b\u4e3a\u8bc4\u4f30\u6a21\u5f0f\r\n    with torch.no_grad():  # \u4e0d\u8ba1\u7b97\u68af\u5ea6\r\n        inp = inp.to(device)  # \u5c06\u8f93\u5165\u79fb\u5230\u8bbe\u5907\u4e0a\r\n        out_enc, h = model.enc(model.emb(inp))  # \u7f16\u7801\u5668\u90e8\u5206\r\n        out_enc = model.DP(out_enc)  # \u5e94\u7528dropout\r\n        h = h.view((1, inp.shape[0], 2 * model.HID))  # \u8c03\u6574\u9690\u85cf\u72b6\u6001\u7684\u5f62\u72b6\r\n\r\n        start_token = char_to_idx['begin']  # \u5f00\u59cbtoken\r\n        beam = [Beam(start_token, 0.0, h, [start_token])]  # \u521d\u59cb\u5316beam\u5217\u8868\r\n\r\n        for _ in range(max_decoding_len):  # \u6700\u5927\u89e3\u7801\u957f\u5ea6\r\n            new_beam = []\r\n\r\n            for b in beam:\r\n                if b.done:\r\n                    new_beam.append(b)  # \u5982\u679c\u5b8c\u6210\u5219\u76f4\u63a5\u6dfb\u52a0\u5230\u65b0beam\u5217\u8868\r\n                    continue\r\n\r\n                dec_inp = torch.tensor([[b.token]], dtype=torch.long, device=device)  # \u51c6\u5907\u89e3\u7801\u5668\u7684\u8f93\u5165\r\n                dec_out, h_new = model.run_dec(dec_inp, out_enc, b.h)  # \u89e3\u7801\u5668\u8fd0\u884c\r\n                log_probs = F.log_softmax(dec_out, dim=-1)  # \u4f7f\u7528log_softmax\u83b7\u53d6\u6982\u7387\r\n\r\n                top_k_log_probs, top_k_tokens = torch.topk(log_probs, beam_width)  # \u83b7\u53d6top_k\u6982\u7387\u548c\u5bf9\u5e94\u7684tokens\r\n\r\n                for i in range(beam_width):\r\n                    token = top_k_tokens[0, 0, i].item()  # \u83b7\u53d6token\r\n                    logp = top_k_log_probs[0, 0, i].item()  # \u83b7\u53d6\u5bf9\u6570\u6982\u7387\r\n                    new_beam.append(b.extend(token, logp, h_new))  # \u6269\u5c55beam\r\n\r\n            beam = sorted(new_beam, key=lambda x: x.logp / len(x.sequence), reverse=True)[:beam_width]  # \u6392\u5e8f\u5e76\u4fdd\u7559\u6700\u597d\u7684beam_width\u4e2abeam\r\n\r\n        # \u8fd4\u56de\u5206\u6570\u6700\u9ad8\u7684top_k\u4e2a\u5e8f\u5217\r\n        return [b.sequence for b in sorted(beam, key=lambda x: x.logp / len(x.sequence), reverse=True)[:top_k]]\r\n```\u3002", "top": 0, "createdAt": 1725262912, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-02", "dateLabelColor": "#bc4c00"}, "P15": {"htmlDir": "docs/post/xiang-fa-AES1 .html", "labels": ["\u6742\u9879"], "postTitle": "\u60f3\u6cd5AES1 ", "postUrl": "post/xiang-fa-AES1%20.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/15", "commentNum": 0, "wordCount": 665, "description": "U2FsdGVkX18LXtG/bU7PJ7OP0jg5NWgPjLtpK6Qz8ydg+7oXAqWTZjVGT+JGcTZW Ws4FZPm6uo3pfWmO67I5WmDCN+GRsFWktJI8Ee1jqCZQYjndDVjUdYjmtrqAecFh cMs9J2MaCc816m+EHwxCPWE/CpLi4yJi9a5v2Co8WFySUcR0ZmDVouTlM4kHt+P9 R8Tj8T+VNcOulpONJtHSEbSQI6EyQxBJfL/zQkHmmT/ewkJGhDR+mnKsG6/FWWil H3/cwjylqNE+/puq4KtyT9hi0vIkaePjja1pXN7mnfrvBppbnKJzPpU5hAF3b7Yj SLw6lOgaoBBecYtwkd/RRRK3sz+H/t9qlnK/VKgJTLfeIr22JPL3hGn+GdJ/1WxJ QyKtnU3gzzJxRBd7oo0HPRmlRQBMgVKXNYjv2UqCe095e3pIab/JZbnrB1S2/zA7 3nLfRi1xz+VflKfrq7HAEUuvIckQvNohMYLL5E/pGwlKOJSrRGwJabMB/s/cC1Dr zHa3bIRCRl/8zfHBc1E5uh29++uZ38kDZDRvF3pYJPVuiUa47/90YmwqOfNvJ053 6a0aS+V07SGI4ZPuH4gLohO2werKDOz1jgemBo4t8OY=    https://tool.oschina.net/encrypt\u3002", "top": 0, "createdAt": 1725262988, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-02", "dateLabelColor": "#bc4c00"}, "P16": {"htmlDir": "docs/post/Github Markdown -gao-ji-yong-fa.html", "labels": ["\u6742\u9879"], "postTitle": "Github Markdown \u9ad8\u7ea7\u7528\u6cd5", "postUrl": "post/Github%20Markdown%20-gao-ji-yong-fa.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/16", "commentNum": 0, "wordCount": 485, "description": "- \u659c\u4f53\uff1a`*\u659c\u4f53\u6587\u672c*`\r\n- \u7c97\u4f53\uff1a`**\u7c97\u4f53\u6587\u672c**`\r\n- \u5206\u5272\u7ebf\uff1a`***`\r\n- \u811a\u6ce8\uff1a`[^tag], \u7136\u540e [^tag]: \u5c31\u884c`\r\n- \u4ee3\u7801\uff1a ` ```javascript````\r\n ```javascript\r\n$(document).ready(function () {\r\n    alert('RUNOOB');\r\n});\r\n```\r\n- \u94fe\u63a5\uff1a`[\u94fe\u63a5\u540d\u79f0](\u94fe\u63a5\u5730\u5740)`\r\n- \u56fe\u7247\uff1a`![alt \u5c5e\u6027\u6587\u672c](\u56fe\u7247\u5730\u5740 '\u53ef\u9009\u6807\u9898')`\r\n- \u8868\u683c\uff1a   |  \u8868\u5934   | \u8868\u5934  | |  ----  | ----  |\r\n\r\n\r\n|  \u8868\u5934   | \u8868\u5934  |\r\n|  ----  | ----  |\r\n| \u5355\u5143\u683c  | \u5355\u5143\u683c |\r\n| \u5355\u5143\u683c  | \u5355\u5143\u683c |\r\n\r\n\u6d41\u7a0b\u56fe\uff1a\r\n\r\n\r\n```mermaid\r\ngraph LR\r\nA[\u65b9\u5f62] -->B(\u5706\u89d2)\r\n    B --> C{\u6761\u4ef6a}\r\n    C -->|a=1| D[\u7ed3\u679c1]\r\n    C -->|a=2| E[\u7ed3\u679c2]\r\n    F[\u6a2a\u5411\u6d41\u7a0b\u56fe]\r\n```\u3002", "top": 0, "createdAt": 1725263078, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-02", "dateLabelColor": "#bc4c00"}, "P17": {"htmlDir": "docs/post/sheng-ming-li-wang-sheng-de-ren- .html", "labels": ["\u601d\u8003"], "postTitle": "\u751f\u547d\u529b\u65fa\u76db\u7684\u4eba ", "postUrl": "post/sheng-ming-li-wang-sheng-de-ren-%20.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/17", "commentNum": 0, "wordCount": 387, "description": "# \u751f\u547d\u529b\u65fa\u76db\u7684\u4eba\r\n\u751f\u547d\u529b\u65fa\u76db\u7684\u4eba\u5f80\u5f80\u80fd\u70b9\u71c3\u522b\u4eba\u5bf9\u4e8e\u751f\u547d\u7684\u6fc0\u60c5\u548c\u5e0c\u671b\uff0c\u6709\u65f6\u5019\u4eba\u60f3\u8981\u7ee7\u7eed\u751f\u6d3b\u4e0b\u53bb\uff0c\u4e0d\u4e00\u5b9a\u9700\u8981\u591a\u4e48\u4e30\u5bcc\u7684\u7269\u8d28\u548c\u5177\u4f53\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6709\u65f6\u5019\u4ec5\u4ec5\u662f\u9700\u8981\u88ab\u4eba\u5e26\u52a8\u8fdb\u5165\u4e00\u4e2a\u597d\u7684\u72b6\u6001\uff0c\u4e00\u5207\u56f0\u6270\u5c31\u4f1a\u8fce\u5203\u800c\u89e3\u3002", "top": 0, "createdAt": 1725263117, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-02", "dateLabelColor": "#bc4c00"}, "P18": {"htmlDir": "docs/post/Chiikawa.html", "labels": ["\u6742\u9879"], "postTitle": "Chiikawa", "postUrl": "post/Chiikawa.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/18", "commentNum": 0, "wordCount": 116, "description": "![wp12429177-chiikawa-wallpapers](https://github.com/user-attachments/assets/369f1a5d-b73e-4485-b07e-a2e6061d73ce)\r\n\u3002", "top": 0, "createdAt": 1725300809, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-03", "dateLabelColor": "#bc4c00"}, "P19": {"htmlDir": "docs/post/Leetcode -shua-ti-bi-ji.html", "labels": ["\u77e5\u8bc6\u7b14\u8bb0"], "postTitle": "Leetcode \u5237\u9898\u7b14\u8bb0", "postUrl": "post/Leetcode%20-shua-ti-bi-ji.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/19", "commentNum": 0, "wordCount": 6, "description": "- TODO\u3002", "top": 0, "createdAt": 1725443599, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-04", "dateLabelColor": "#bc4c00"}, "P21": {"htmlDir": "docs/post/LoRA -ji-shu-xiang-jie.html", "labels": ["\u673a\u5668\u5b66\u4e60\u7b97\u6cd5"], "postTitle": "LoRA \u6280\u672f\u8be6\u89e3", "postUrl": "post/LoRA%20-ji-shu-xiang-jie.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/21", "commentNum": 0, "wordCount": 106, "description": "# Adapter Tuning\r\n# Prefix Tuning\r\n# Prompt Tuning\r\n# P-Tuning\r\n# P-Tuning v2 \r\n# LoRA \r\n# QLoRA\r\n\r\n\r\n# \u6539\u8fdb\u3002", "top": 0, "createdAt": 1725704654, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-07", "dateLabelColor": "#bc4c00"}, "P22": {"htmlDir": "docs/post/Publications.html", "labels": ["link"], "postTitle": "Publications", "postUrl": "post/Publications.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/22", "commentNum": 0, "wordCount": 83, "description": "> [!NOTE]\r\n> Useful information that users should know, even when skimming content.\u3002", "top": 0, "createdAt": 1726659977, "style": "<style>.markdown-alert{padding:0.5rem 1rem;margin-bottom:1rem;border-left:.25em solid var(--borderColor-default,var(--color-border-default));}.markdown-alert .markdown-alert-title {display:flex;font-weight:var(--base-text-weight-medium,500);align-items:center;line-height:1;}.markdown-alert>:first-child {margin-top:0;}.markdown-alert>:last-child {margin-bottom:0;}</style><style>.markdown-alert.markdown-alert-note {border-left-color:var(--borderColor-accent-emphasis, var(--color-accent-emphasis));background-color:var(--color-accent-subtle);}.markdown-alert.markdown-alert-note .markdown-alert-title {color: var(--fgColor-accent,var(--color-accent-fg));}</style>", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-18", "dateLabelColor": "#bc4c00"}}, "singeListJson": {"P1": {"htmlDir": "docs/about.html", "labels": ["about"], "postTitle": "About", "postUrl": "about.html", "postSourceUrl": "https://github.com/stayt2/stayt2.github.io/issues/1", "commentNum": 0, "wordCount": 938, "description": "# ShortBio\r\n- Nankai University, School of Statistics and Data Science, Data Science and Big Data Technology\r\n- KAUST, CEMSE, Visiting Student\r\n- HKUST, CSE, Research Assistant\r\n- Nankai University, Cyber School, Computer Technology\r\n- China Mobile, Mobile Research Institute, Internship\r\n- Kwai Technology, Content and Risk Technology Department, Internship\r\n\r\n## Interests: \r\n\r\n- Machine Learning,\r\n- Machine Learning Security\r\n- Large Model Security\r\n\r\n## Awards\r\n- China National Scholarship, Tianjin Government Scholarship, Nankai Gong-Neng Scholarship, China National Encouragement Scholarship, Nankai Ming-Shan-Yun-Neng Scholarship\r\n\r\n## Services:\r\n(Sub)Reviewer for CCS2023, EMNLP 2022, TBD 2022, WASA 2022, EACL 2023\r\n\r\n- Teaching Assistant for Deep Learning 2024 Fall in Nankai University\r\n- Teaching Assistant for Linear Algebra 2024 Spring in Nankai University\r\n- Teaching Assistant for Python 2022-2024 in Nankai University\r\n\u3002", "top": 0, "createdAt": 1725261223, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script>", "head": "", "ogImage": "https://stayt2.github.io/touxiang.jpg", "createdDate": "2024-09-02", "dateLabelColor": "#bc4c00"}}, "labelColorDict": {"about": "#d876e3", "link": "#006b75", "\u4ee3\u7801": "#d73a4a", "\u57fa\u7840\u7b97\u6cd5": "#0075ca", "\u601d\u8003": "#008672", "\u603b\u7ed3": "#ffffff", "\u673a\u5668\u5b66\u4e60\u7b97\u6cd5": "#cfd3d7", "\u6742\u9879": "#e4e669", "\u751f\u6d3b": "#a2eeef", "\u77e5\u8bc6\u7b14\u8bb0": "#7057ff"}, "displayTitle": " ", "faviconUrl": "https://stayt2.github.io/touxiang.jpg", "ogImage": "https://stayt2.github.io/touxiang.jpg", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "homeUrl": "https://stayt2.github.io", "prevUrl": "/index.html", "nextUrl": "disabled"}